class =require("class");
local Object = require("BaseObject");

nameDictionary = {
    fire =" this is fire card , use to fight",
    water ="this is water card, use to fight"
}

--更改创建方法，避免全局混用
--参考cocos的语法糖
-- 创建子类
local Card =class("Card",Object);
Card.__index = Card;

--初始化状态
Card.initStates = 1;

--卡牌名
function Card:setName(objName)
    self.objName=objName;
end

--卡牌id
function Card:setId()
    --id唯一
    self.objId=Card.super.setUniqueId();
end

--卡牌类型
function Card:setType(objType)
    --1表示攻击
    --2表示防御，护盾
    --3表示治疗，回血
    --4表示特殊效果
    self.objType=objType;
end

--卡牌数值
function Card:setNumber(objNumber)
    self.objNumber=objNumber;
end

--游戏对象
function Card:setInstantiate(objInstantiate)
    self.objInstantiate=objInstantiate or "error";
    print(self.objInstantiate);
end

--构造函数
function Card:ctor()
    Card.super.ctor(self,"Card");
end

--初始化
function Card:init(objName,objType,objNumber,objInstantiate)

    if self.initStates ==1 then
        self:setName(objName);
        self:setId();
        self:setType(objType);
        self:setNumber(objNumber);
        self:setInstantiate(objInstantiate);
        self.level =1;
        self.initStates=0;
    else
        print("不能重复赋值");
    end

end

--卡牌升级（可选）
function Card:updateLevel()
    if self.level<3 then
        self.level=self.level+1;
        print(self.level);
    else
        print("不能重复升级");
    end
end

--返回卡牌信息
function Card:cardInformation()
    print("Card information is here");
    return self.objId
end

--移动卡牌（未完成）
function Card:moveCard()
    --self.objInstantiate:AddListener(function()
        if CS.UnityEngine.Input.GetMouseButton(0) then
            local h =CS.UnityEngine.Input.GetAxis("Mouse X");
            local v =CS.UnityEngine.Input.GetAxis("Mouse Y");
            self.objInstantiate.transform.position= self.objInstantiate.transform.position+CS.UnityEngine.Vector3(h*100,v*100,0);
        end
    --end)
end

--使用卡牌
--利用通信将卡牌信息发送给网络层
function Card:useCard()

end

--删除卡牌
function Card:drop()
    Card.super.drop(self);
    print("Card drop");
end

function Card:writeFile()
    file = io.open("Assets/Resources/Config/Card.txt","a+");
    --print(file:read());
    -- 设置默认输入文件为 test.lua
    io.input(file)

    -- 输出文件第一行
    print(io.read())
    file:close();
    --file:write(1);
    --file:close();
end

Card:new();
return Card